{"version":3,"sources":["components/Countries.js","components/Filter.js","components/Searchbar.js","App.js","components/CountryDetails.js","components/Footer.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","media","height","content","nav","textDecoration","cardWidth","width","Countries","props","classes","countries","length","LinearProgress","className","Grid","container","spacing","direction","justify","alignItems","map","country","numericCode","flag","name","population","region","capital","alpha3Code","item","xs","sm","md","to","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","component","title","color","CardActions","formControl","minWidth","minHeight","marginBottom","selectEmpty","marginTop","Filter","FormControl","InputLabel","id","Select","labelId","label","onChange","event","filterCountries","target","value","MenuItem","Searchbar","placeholder","newValue","searchCountries","display","gridTemplateColumns","gridGap","justifyContent","padding","paper","flex","toolbar","App","useState","setCountries","searchCountry","setsearchCountry","empty","setEmpty","fetchCountryData","a","fetch","response","json","useEffect","ThemeProvider","style","searchTerm","search","filter","toLowerCase","includes","filterTerm","overflow","buttonStyle","img","maxWidth","CodeURL","CountryDetails","window","location","pathname","substring","lastIndexOf","countryByCodeURL","setCountryByCodeURL","countryByCode","setCountryByCode","fetchCountryDataByCode","data","lg","Button","undefined","Skeleton","alt","src","CircularProgress","nativeName","subregion","cursor","borders","e","onClick","margin","topLevelDomain","join","currencies","languages","textAlign","Footer","Paper","elevation","fontSize","Root","prefersDarkMode","useMediaQuery","React","darkMode","setDarkMode","createMuiTheme","palette","type","CssBaseline","position","Toolbar","basename","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.487b1819.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Grid } from \"@material-ui/core/\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 180\r\n  },\r\n  content: {\r\n    height: 150\r\n  },\r\n  nav: {\r\n    textDecoration: \"None\"\r\n  },\r\n  cardWidth:{\r\n      width: '21rem'\r\n  }\r\n}));\r\n\r\nconst Countries = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    (props.countries.length) === 0 ?\r\n    <LinearProgress />\r\n      :\r\n      <div className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={5}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {props.countries.map((country) => {\r\n            const {\r\n              numericCode,\r\n              flag,\r\n              name,\r\n              population,\r\n              region,\r\n              capital,\r\n              alpha3Code\r\n            } = country;\r\n\r\n            return (\r\n              <Grid item xs={12} sm={6} md={3} key={numericCode}>\r\n                <NavLink className={classes.nav} to={`/${alpha3Code}`}>\r\n                  <Card className={classes.cardWidth}>\r\n                    <CardActionArea>\r\n                      <CardMedia className={classes.media} image={flag} />\r\n                      <CardContent className={classes.content}>\r\n                        <Typography\r\n                          gutterBottom\r\n                          variant=\"h5\"\r\n                          component=\"h2\"\r\n                          className={classes.title}\r\n                        >\r\n                          {name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          Population: {population}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          Region: {region}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          Capital: {capital}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions></CardActions>\r\n                  </Card>\r\n                </NavLink>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 230,\r\n    minHeight: 50,\r\n    marginBottom: 20,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Filter(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Filter By Region</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          label=\"Filter By Region\"\r\n          onChange={(event) => {\r\n            props.filterCountries(event.target.value)\r\n          }}\r\n        >\r\n          <MenuItem value={''}>\r\n            <em>All</em>\r\n          </MenuItem>\r\n          <MenuItem value={'Africa'}>Africa</MenuItem>\r\n          <MenuItem value={'Americas'}>Americas</MenuItem>\r\n          <MenuItem value={'Asia'}>Asia</MenuItem>\r\n          <MenuItem value={'Europe'}>Europe</MenuItem>\r\n          <MenuItem value={'Oceania'}>Oceania</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\n\r\nfunction Searchbar(props) {\r\n  return (\r\n    <div variant=\"body1\">\r\n      <SearchBar\r\n        placeholder=\"Search by Country Name\"\r\n        onChange={(newValue) => {\r\n          props.searchCountries(newValue)\r\n        }\r\n\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Countries from './components/Countries';\r\nimport Filter from './components/Filter';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    gridGap: theme.spacing(3),\r\n    justifyContent: 'space-between',\r\n    width: '100%'\r\n  },\r\n  root: {\r\n    padding: 30,\r\n\r\n  },\r\n  paper: {\r\n    marginBottom: 30,\r\n  },\r\n  flex: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'space-between',\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([])\r\n  const [searchCountry, setsearchCountry] = useState([]) \r\n  const [empty, setEmpty] = useState(false)\r\n  const fetchCountryData = async () => {\r\n    const response = await fetch(url)\r\n    const countries = await response.json()\r\n    setCountries(countries)\r\n    setsearchCountry(countries)\r\n  }\r\n\r\n  const searchCountries = (searchTerm) => {\r\n    var search = [...countries];\r\n    search = search.filter(a => a.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    (search.length===0 ) ? setEmpty(true) : setEmpty(false)\r\n    setsearchCountry(search)\r\n  }\r\n\r\n  const filterCountries = (filterTerm) => {\r\n    var filter = [...countries];\r\n    filter = filter.filter(a => a.region.includes(filterTerm));\r\n    setsearchCountry(filter)\r\n  }\r\n  useEffect(() => {\r\n    fetchCountryData();\r\n  },\r\n    []\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n\r\n\r\n    <div className={classes.root}>\r\n      <ThemeProvider>\r\n        <Grid container className={classes.flex}>\r\n          <Grid item xs={12} sm={3} style={{ marginBottom: 20,}}>\r\n            <Searchbar searchCountries={searchCountries} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <Filter filterCountries={filterCountries} />\r\n          </Grid>\r\n        </Grid>\r\n        {empty===true ? <h2>Not Found</h2> :\r\n        <Countries countries={searchCountry} /> }\r\n      </ThemeProvider>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: \"hidden\",\r\n    padding: theme.spacing(6)\r\n  },\r\n  buttonStyle: {\r\n    marginBottom: 50\r\n  },\r\n  img: {\r\n    maxWidth: 470,\r\n    height: \"auto\",\r\n    padding: 10,\r\n  },\r\n  nav: {\r\n    textDecoration: \"None\"\r\n  }\r\n}));\r\n\r\nconst CodeURL = \"https://restcountries.eu/rest/v2/alpha/\";\r\n\r\nexport default function CountryDetails(props) {\r\n  const classes = useStyles();\r\n  const [countryByCodeURL, setCountryByCodeURL] = useState(\r\n    CodeURL +\r\n    window.location.pathname.substring(\r\n      window.location.pathname.lastIndexOf(\"/\") + 1\r\n    )\r\n  );\r\n\r\n  const [countryByCode, setCountryByCode] = useState([]);\r\n\r\n  const fetchCountryDataByCode = async () => {\r\n    const response = await fetch(\r\n      CodeURL +\r\n      window.location.pathname.substring(\r\n        window.location.pathname.lastIndexOf(\"/\") + 1\r\n      )\r\n    );\r\n    const data = await response.json();\r\n    setCountryByCode(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountryDataByCode();\r\n  }, [countryByCodeURL]);\r\n\r\n  return (\r\n    <Grid lg={12} item container spacing={3} className={classes.root}>\r\n      <Grid item lg={12} xs={12}>\r\n        <NavLink className={classes.nav} to=\"/\">\r\n          <Button variant=\"outlined\" className={classes.buttonStyle}>\r\n            <ArrowBackIcon /> Back\r\n            </Button>\r\n        </NavLink>\r\n      </Grid>\r\n      <Grid item lg={4} xs={12} container justify=\"center\" style={{ padding: 10 }}>\r\n        {countryByCode.flag === undefined ? (\r\n          <Skeleton variant=\"rect\" width={300} height={218} />\r\n        ) : (\r\n          <img className={classes.img} alt=\"complex\" src={countryByCode.flag} />\r\n        )}\r\n      </Grid>\r\n      {countryByCode.name === undefined ? <CircularProgress /> : (\r\n        <>\r\n          <Grid item lg={4} xs={12}>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              <strong>{countryByCode.name}</strong>\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <Typography>\r\n                <strong>Native Name : </strong>\r\n                {countryByCode.nativeName === undefined ?\r\n                  <CircularProgress />\r\n                  : countryByCode.nativeName}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Population : </strong>\r\n                {countryByCode.population === undefined ?\r\n                  <CircularProgress />\r\n                  : countryByCode.population}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Region : </strong>\r\n                {countryByCode.region === undefined ?\r\n                  <CircularProgress />\r\n                  : countryByCode.region}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Sub Region : </strong>\r\n                {countryByCode.subregion === undefined ?\r\n                  <CircularProgress />\r\n                  : countryByCode.subregion}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Capital : </strong>\r\n                {countryByCode.capital === undefined ?\r\n                  <CircularProgress />\r\n                  : countryByCode.capital}\r\n              </Typography>\r\n            </Typography>\r\n\r\n            <Typography variant=\"body3\" style={{ cursor: \"pointer\" }}>\r\n              <strong>Border Countries : </strong>\r\n              {countryByCode.borders === undefined\r\n                ? <CircularProgress />\r\n                : countryByCode.borders.map((e) => (\r\n                  <NavLink\r\n                    className={classes.nav}\r\n                    to={{ pathname: \"/\" + e }}\r\n                    onClick={() => {\r\n                      setCountryByCodeURL(CodeURL + \"/\" + e);\r\n                    }}\r\n                  >\r\n                    <Button variant=\"outlined\" style={{ margin: 3 }}>\r\n                      {e}\r\n                    </Button>\r\n                  </NavLink>\r\n                ))}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item lg={4} xs={12}>\r\n            <Typography variant=\"body2\" style={{ marginTop: 40 }} gutterBottom>\r\n              <Typography>\r\n                <strong>Top Level Domain : </strong>\r\n                {countryByCode.topLevelDomain === undefined\r\n                  ? <CircularProgress />\r\n                  : countryByCode.topLevelDomain.join(\", \")}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Currencies : </strong>\r\n                {countryByCode.currencies === undefined\r\n                  ? <CircularProgress />\r\n                  : countryByCode.currencies.map((e) => e.name).join(\", \")}\r\n              </Typography>\r\n              <Typography>\r\n                <strong>Languages : </strong>\r\n                {countryByCode.languages === undefined\r\n                  ? <CircularProgress />\r\n                  : countryByCode.languages.map((e) => e.name).join(\", \")}\r\n              </Typography>\r\n            </Typography>\r\n          </Grid>\r\n\r\n        </>)}\r\n    </Grid>\r\n  );\r\n}\r\n","import { Paper } from '@material-ui/core';\r\nimport React from 'react';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    paper: {\r\n        textAlign: 'center', height: 60, padding: 10,\r\n    },\r\n    root: {\r\n        marginTop: \"calc(12% + 60px)\",\r\n    }\r\n}));\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={0}>\r\n                <CopyrightIcon style={{ fontSize: 'small' }} />\r\n                Copyright 2021. Challenge by frontend Mentor. Coded by Maksuda Islam Lima.\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport CountryDetails from \"./components/CountryDetails\";\r\nimport Footer from \"./components/Footer\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport {\r\n    createMuiTheme,\r\n    ThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NightsStayIcon from \"@material-ui/icons/NightsStay\";\r\nconst useStyles = makeStyles(() => ({\r\n    toolbar: {\r\n        justifyContent: \"space-between\"\r\n    }\r\n}));\r\n\r\nexport default function Root() {\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n    const [darkMode, setDarkMode] = React.useState(prefersDarkMode);\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: darkMode ? \"dark\" : \"light\"\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setDarkMode(prefersDarkMode);\r\n    }, [prefersDarkMode]);\r\n\r\n    const handleDarkModeToggle = () => {\r\n        setDarkMode(!darkMode);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return ( \r\n   \r\n    <ThemeProvider theme = { theme }>\r\n        <CssBaseline />\r\n        <div>\r\n        <Paper position = \"static\">\r\n        <Toolbar className = { classes.toolbar }>\r\n        <Typography variant = \"h5\" > Where in the world ? </Typography>  \r\n        <Button onClick = { handleDarkModeToggle }>\r\n        <NightsStayIcon>\r\n        </NightsStayIcon>\r\n        Dark Mode </Button>  \r\n        </Toolbar> \r\n        </Paper>\r\n        <Router basename = \"/rest-countries\">\r\n        <Switch>\r\n        <Route path = \"/\"\r\n        exact component = { App }/>   \r\n        <Route path = \"/:alpha3Code\"\r\n        exact component = { CountryDetails }/>  \r\n        </Switch> \r\n        <Footer/>\r\n        </Router>  \r\n        </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nReactDOM.render( < Root/> , document.getElementById(\"root\"));"],"sourceRoot":""}